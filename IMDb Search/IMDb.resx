<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="nextTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>24, 17</value>
  </metadata>
  <metadata name="backTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>114, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AP///CH///4B////gf///4H////A////4f////P/
</value>
  </data>
</root>